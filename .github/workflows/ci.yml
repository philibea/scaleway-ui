name: CI

on:
  pull_request:
    types: ['opened', 'edited', 'reopened', 'synchronize']
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.5
    - name: Use Node.js
      uses: actions/setup-node@v2.4.1
      with:
        node-version: 17
        cache: 'yarn'
    - run: yarn
    - run: yarn run lint
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node: [ '14', '16', '17' ]
    steps:
    - uses: actions/checkout@v2.3.5
      with:
        fetch-depth: "0"
    - name: Use Node.js
      uses: actions/setup-node@v2.4.1
      with:
        node-version: ${{ matrix.node }}
        cache: 'yarn'
    - run: yarn
    - run: yarn run test:unit:coverage
    - uses: codecov/codecov-action@v2.1.0
  accessibility:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.5
        with:
          fetch-depth: "0"
      - name: Use Node.js
        uses: actions/setup-node@v2.4.1
        with:
          node-version: 17
          cache: 'yarn'
      - run: yarn
      - run: yarn run test:a11y
  build:
    strategy:
      matrix:
        node: [ '14', '16', '17' ]
    runs-on: ubuntu-20.04
    needs: [lint, test]
    steps:
    - uses: actions/checkout@v2.3.5
    - name: Use Node.js
      uses: actions/setup-node@v2.4.1
      with:
        node-version: ${{ matrix.node }}
    - run: yarn install
    - run: yarn run build
  deploy:
    runs-on: ubuntu-20.04
    needs: [build]
    if: github.ref == 'refs/heads/main'
    env:
      GIT_COMMITTER_NAME: Scaleway Bot
      GIT_COMMITTER_EMAIL: github@scaleway.com
    steps:
    - uses: actions/checkout@v2.3.5
      with:
        fetch-depth: "0"
        persist-credentials: false
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Use Node.js
      uses: actions/setup-node@v2.4.1
      with:
        node-version: 17
    - run: yarn install
    - run: yarn run build
    - run: yarn run semantic-release
      env:
        HUSKY: 0
        NPM_TOKEN: ${{secrets.NPM_TOKEN}}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  chromatic-deployment:
    # Operating System
    runs-on: ubuntu-20.04
    # Job steps
    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        run: yarn
        # ðŸ‘‡ Adds Chromatic as a step in the workflow
      - name: Publish to Chromatic
        if: github.ref != 'refs/heads/main'
        uses: chromaui/action@v1
        # Chromatic GitHub Action options
        with:
          token: ${{ secrets.GH_TOKEN }}
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          buildScriptName: build:storybook
          exitZeroOnChanges: true # ðŸ‘ˆ Option to prevent the workflow from failing
      - name: Publish to Chromatic and auto accept changes
        if: github.ref == 'refs/heads/main'
        uses: chromaui/action@v1
        # Required options for the Chromatic GitHub Action
        with:
          token: ${{ secrets.GH_TOKEN }}
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          autoAcceptChanges: true # ðŸ‘ˆ Option to accept all changes
